import streamlit as st  # Importa a biblioteca Streamlit para criar apps web interativos
import pandas as pd
from sklearn.linear_model import LinearRegression  # Importa o modelo de regress√£o linear do scikit-learn
from sklearn.metrics import r2_score, mean_squared_error, mean_absolute_error  # Importa m√©tricas de avalia√ß√£o
import plotly.graph_objs as go  # Importa Plotly para gr√°ficos interativos

st.set_page_config(page_title="Previs√£o de Custos de Franquia", layout="wide", page_icon="üí∏")
st.sidebar.title("Menu")
st.sidebar.info("Preencha os campos para prever o custo inicial de uma franquia. Voc√™ pode inserir um valor anual.")

tabs = st.tabs(["Dashboard", "Sobre o Desenvolvedor"])
tab_dashboard = tabs[0]
tab_dev = tabs[1]

with tab_dashboard:
    st.title("Previs√£o Inicial de Custo para Franquia")  # T√≠tulo do app na interface web
    st.markdown("""
    Esta aplica√ß√£o utiliza regress√£o linear para prever o custo inicial de abertura de uma franquia com base no valor anual da franquia. Voc√™ pode visualizar os dados, analisar o gr√°fico interativo e conferir as m√©tricas do modelo.
    """)

    dados = pd.read_csv("dataset.csv", sep=";")  # L√™ os dados do arquivo CSV padr√£o

    X = dados[['FrqAnual']]  # Seleciona a coluna de valor anual da franquia como vari√°vel independente
    y = dados['CusInic']  # Seleciona a coluna de custo inicial como vari√°vel dependente

    modelo = LinearRegression().fit(X, y)  # Treina o modelo de regress√£o linear
    prev_treino = modelo.predict(X)

    col1, col2 = st.columns([1,2])  # Layout mais amplo para gr√°fico

    with col1:
        st.subheader("Amostra dos Dados")
        st.dataframe(dados.head(15))

    with col2:
        st.subheader("Gr√°fico Interativo")
        trace_dados = go.Scatter(x=X['FrqAnual'], y=y, mode='markers', name='Dados reais', marker=dict(color='blue'))
        trace_regressao = go.Scatter(x=X['FrqAnual'], y=prev_treino, mode='lines', name='Regress√£o Linear', line=dict(color='red'))
        layout = go.Layout(title='Dispers√£o e Regress√£o Linear', xaxis=dict(title='Valor Anual da Franquia'), yaxis=dict(title='Custo Inicial'))
        fig = go.Figure(data=[trace_dados, trace_regressao], layout=layout)
        st.plotly_chart(fig, use_container_width=True)
        
    # Exibe m√©tricas do modelo
    st.header("M√©tricas do Modelo de Regress√£o Linear")
    col3, col4, col5 = st.columns(3)
    col3.metric("R¬≤", f"{r2_score(y, prev_treino):.3f}", help="Coeficiente de determina√ß√£o")
    col4.metric("Erro M√©dio Absoluto (MAE)", f"{mean_absolute_error(y, prev_treino):.2f}")
    col5.metric("Erro Quadr√°tico M√©dio (MSE)", f"{mean_squared_error(y, prev_treino):.2f}")


st.sidebar.header("Fa√ßa uma Previs√£o")
novo_valor = st.sidebar.number_input("Insira Novo Valor Anual", min_value=1.0, max_value=999999.0, value=1500.0, step=0.01)
processar = st.sidebar.button("Processar Previs√£o")

if processar:
    dados_novo_valor = pd.DataFrame([[novo_valor]], columns=['FrqAnual'])
    prev = modelo.predict(dados_novo_valor)
    st.success(f"Para {novo_valor:.2f} Reais, a Previs√£o de Custo Inicial √© de {prev[0]:.2f} Reais")


with tab_dev:
    st.subheader("Sobre o Desenvolvedor")
    st.markdown("""
    ## Giulliano Veiga

    - Cientista de Dados
    - WhatsApp: [+55 85 98170-8027](https://wa.me/5585981708027)
    - Instagram: [@giullianoveiga](https://instagram.com/giullianoveiga)
    - GitHub: [giullianoveiga](https://github.com/giullianoveiga)
    - LinkedIn: [Giulliano Veiga](https://www.linkedin.com/in/giulliano-veiga/)
    """)
